 Λεπιδας Νικολας 

 Περιβαλλον υλοποιησης: Το προγραμμα γραφτηκε και δοκιμαστηκε σε linux (kali). Εχω φτιαξει makefile και το εκτελεσιμο προγραμμα εχει ονομα prog.

 Τροπος εκτελεσης: Αρχικα για αν τρεξει το προγραμμα παιρνει ενα ορισμα απο τη γραμμη εντολων. Το ορισμα αυτο ειναι
 οι χρονικες μοναδες για τις οποιες θα τρεχει η προσομοιωση του αεροδρομιου.

παραδειγμα: ./prog 10

Αρχεια εισοδου: Εχω φτιαξει δυο αρχεια,ενα για τις αιτησεις και ενα για τις πτησεις αντιστοιχα applications.txt και flights.txt . Ως χρονικες μοναδες εχω βαλει μεγιστο αριθμο το 8 (6+2) στις πτησεις ενω υπαρχουν και αιτησεις που αναχωρουν στις 10 χρονικες μοναδες (οι οποιες απλα παραμενουν στη λιστα αναμονης μετα το περας της προσομοιωσης). Δεν εχει νοημα να δοθει ως ορισμα στην αρχη 100 χρονικες μοναδες κτλ.

iofunctions: Επισης στο προγραμμα εφτιαξα δυο συναρτησεις που διαβαζουν πτησεις και αιτησεις και τις εχω χωρισει σε δυο αρχεια iofunctions.cpp και iofunctions.hpp.

Τα terminals τα κραταω στο αεροδρομιο με εναν πινακα δεικτων σε terminals που δεσμευεται δυναμικα. Επιπλεον για τη λιστα των αιτησεων στις πτησεις (list_of_passenger) και για τη λιστα αναμονης των αιτησεων (waiting_list) εχω χρησιμοποιησει την λιστα της STL.

Για το notation εχω χρησιμοποιησει snake case (waiting_list) για τις μεθοδους των κλασεων και τα μελη αυτων οπως ειχε δοθει στην εκφωνηση, ενω για τα ορισματα στις συναρτησεις χρησιμοποιω στα περισσοτερα camel case (lastName).

Εκτυπωσεις: Στο προγραμμα εχω βαλει παραπανω εκτυπωσεις απο τις ζητουμενες με σκοπο να γινει vizualize το τι συμβαινει καθε χρονικη μοναδα στο αεροδρομιο.